


|tag-with:namespace
  [id-or-name]
  random values
  blah ->
    |more-children

|tag ids monos attributes -> children
|- directive { children }
:directive { children }
|---  nop / comment
|===  nop / comment
|' multi-line string '|
|{fenced/filter}
  # This one is indent-sensitive
|{fenced/filter}' multi-line string '|
|= interpolated from code (shorthand for `|{native}` )
Normal text
\| also normal text
\[ also normal text
|[an-implied-tag]
[an-implied-tag]   # tag is set to 'tag'
|                  # also implied tag, but with no id/name
|# multi-line comment, indent-insensitive #|

 * Multiple id's - essentially an id alias, or think of as name and id, etc.
 * Solo-attributes always before attribute-value-pairs
 * Explicit line continuations when line ends in a backslash
 * Optional pipe on: [.
 * Needs escape to start and be in a line of text: ' " . [ | # :


|process [Be awesome]
         .private
         |awesomeness: true blankness
         |effortness:  truly amazing
         |blah:        dude
  |task-templates
    |' Some crazy, crazy string, oh yeah '|   # solo-attribute or child??
    dirt: well yes, a little
    \this-is: just plain old text
    [awesomeness]


|process[Be awesome].private awesomeness:true blankness effortness:truly amazing blah:dude

|============================================
|process [Be awesome]
  .private
  |awesomeness : true blankness
  |effortness  : truly amazing
  |blah        : dude
  |-----------------------------------------------------------------------
  |task-templates
    |' Some crazy, crazy string, oh yeah '|   # solo-attribute or child??
    dirt: well yes, a little
    \this-is: just plain old text
    [awesomeness]
    |- [1..20].each do |i|

  |more-stuff
|============================================
      



|========================
|process [1]
    .private
    |color : red
    |----------------------
  |task [read]
  |task [write]
  |'This should be ok'|
|========================


|process[1].private color:red
  |task[read]
  |task[write]
  This should be ok

|process{[1].private|color:red|task[read]|task[write]|'This should be ok'|}

|process[1].private{|color:red|task[read]|task[write]|'This should be ok'|}

-----------------

== Templating

|process [1]
    .private
    |color : red
  : // YOU ARE HERE
  :[ t | t in tasks]
  :with[tasks|t]
    |task [
    |task [read]
    |task [write]
  |'This should be ok'|

